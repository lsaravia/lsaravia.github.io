<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Latest News | EcoComplex</title>
    <link>https://lsaravia.github.io/post/</link>
      <atom:link href="https://lsaravia.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Latest News</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Wed, 07 May 2025 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://lsaravia.github.io/media/icon_hu_4accc2c0008842f9.png</url>
      <title>Latest News</title>
      <link>https://lsaravia.github.io/post/</link>
    </image>
    
    <item>
      <title>Using Infomap for Food Web Modularity</title>
      <link>https://lsaravia.github.io/post/25-05-07-infomap/</link>
      <pubDate>Wed, 07 May 2025 00:00:00 +0000</pubDate>
      <guid>https://lsaravia.github.io/post/25-05-07-infomap/</guid>
      <description>&lt;p&gt;This post introduces how to calculate and assess modularity in food web networks using the &lt;code&gt;multiweb&lt;/code&gt; R package. We illustrate this with the Potter Cove food web (included in the package as &lt;code&gt;netData[[23]]&lt;/code&gt;) and show how to run Infomap, compare implementations, and apply network randomization routines.
You need to install infomap&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mapequation.org/infomap/#Install&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Infomap Installation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;and &amp;lsquo;multiweb&amp;rsquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;devtools&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;install_github&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;lsaravia/multiweb&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;run-infomap-on-an-empirical-food-web&#34;&gt;Run Infomap on an Empirical Food Web&lt;/h2&gt;
&lt;p&gt;We use the &lt;code&gt;run_infomap()&lt;/code&gt; function, an interface between R and the external Infomap binary:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;multiweb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tidyverse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;netData[[23]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Potter Cove food web&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;py_infomap0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;run_infomap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output_dir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;return_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;py_infomap0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;codelength&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[1] 4.36376
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To explore the module membership:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;py_infomap0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;py_infomap0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;communities&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;py_infomap0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Output for module 1:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  module                       node      flow
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1      1 Gobionotothen gibberifrons 0.0162264
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2      1          Notothenia rossii 0.0593102
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3      1     Harpagifer antarcticus 0.0411967
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4      1  Lindbergichthys nudifrons 0.0255800
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;5      1    Chaenocephalus aceratus 0.1391530
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;6      1  Parachaenichthys charcoti 0.0024676
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alternatively, retrieve an igraph-compatible object:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;py_infomap&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;run_infomap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;py_infomap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;codelength&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IGRAPH clustering infomap, groups: 7, mod: 0.18
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+ groups:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  $`1`
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  [1] &amp;#34;Gobionotothen gibberifrons&amp;#34; &amp;#34;Notothenia rossii&amp;#34;          &amp;#34;Harpagifer antarcticus&amp;#34;     &amp;#34;Lindbergichthys nudifrons&amp;#34; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  [5] &amp;#34;Chaenocephalus aceratus&amp;#34;    &amp;#34;Parachaenichthys charcoti&amp;#34; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$codelength
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[1] 4.36376
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;-a-note-on-cluster_infomap&#34;&gt;‚ùó A Note on &lt;code&gt;cluster_infomap&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The same algorithm is included in &lt;code&gt;igraph&lt;/code&gt; as &lt;code&gt;cluster_infomap()&lt;/code&gt;, but it produces different results:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ig_infomap&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;cluster_infomap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ig_infomap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;codelength&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IGRAPH clustering infomap, groups: 1, mod: 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+ groups:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  $`1`
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [1] &amp;#34;Aged detritus&amp;#34;                &amp;#34;Polychaeta&amp;#34;                   &amp;#34;Polynoidae&amp;#34;                   &amp;#34;Gitanopsis squamosa&amp;#34;         
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [5] &amp;#34;Gobionotothen gibberifrons&amp;#34;   &amp;#34;Notothenia rossii&amp;#34;            &amp;#34;Ophionotus victoriae&amp;#34;         &amp;#34;Aequiyoldia eightsii&amp;#34;        
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [9] &amp;#34;Salpidae&amp;#34;                     &amp;#34;Gammaridea&amp;#34;                   &amp;#34;Ostracoda&amp;#34;                    &amp;#34;Oligochaeta&amp;#34;                 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  + ... omitted several groups/vertices
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[1] 5.845473
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We validated our results against the Infomap web interface and found that &lt;code&gt;run_infomap()&lt;/code&gt; yields consistent and accurate results. We therefore recommend &lt;strong&gt;not using&lt;/strong&gt; &lt;code&gt;cluster_infomap()&lt;/code&gt; for empirical studies.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;randomizing-networks-for-null-model-comparison&#34;&gt;Randomizing Networks for Null Model Comparison&lt;/h2&gt;
&lt;h3 id=&#34;1-curveball-randomization&#34;&gt;1. Curveball Randomization&lt;/h3&gt;
&lt;p&gt;We can randomize networks using the &lt;strong&gt;curveball algorithm&lt;/strong&gt;, which preserves row/column sums (degree sequence):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;gl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;curve_ball&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;modl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;calc_modularity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cluster_function&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;run_infomap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Plotting the distribution of modularity across replicates:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;ggplot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Modularity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;geom_density&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fill&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;skyblue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;geom_vline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xintercept&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;py_infomap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modularity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;linetype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;dashed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;labs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Distribution of Modularity under Curveball Randomization&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Modularity&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Density&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;theme_bw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/25-05-07-infomap/infomap_density_plot_hu_76b77e5dd8fff8ac.webp 400w,
               /post/25-05-07-infomap/infomap_density_plot_hu_67383fcc4f6d06ad.webp 760w,
               /post/25-05-07-infomap/infomap_density_plot_hu_35803268b439c15b.webp 1200w&#34;
               src=&#34;https://lsaravia.github.io/post/25-05-07-infomap/infomap_density_plot_hu_76b77e5dd8fff8ac.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h3 id=&#34;2-degree-preserving-shuffling&#34;&gt;2. Degree-Preserving Shuffling&lt;/h3&gt;
&lt;p&gt;This routine preserves the in- and out-degree sequence via iterative edge swaps:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;shuffle_network_deg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_graph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;delta&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Where &lt;code&gt;delta&lt;/code&gt; is the number of swaps&lt;/p&gt;
&lt;p&gt;We use this in a more systematic way with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;‚Äì &lt;span class=&#34;nf&#34;&gt;generate_shuffled_seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;netData[[29]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;max_delta&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;modularity_func&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;run_infomap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;shuffle_func&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shuffle_network_deg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This produces a sequence of 100 networks each with 10 edge swaps using the &lt;code&gt;shuffle_network_deg&lt;/code&gt; algorithm&lt;/p&gt;
&lt;p&gt;Plotting modularity over shuffle steps can help detect when modularity deviates from the empirical structure.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Extract modularity metrics&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;metrics_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Metrics&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Add a column identifying the original vs shuffled&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;metrics_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ifelse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;metrics_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Step&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Original&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Shuffled&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Plot modularity over shuffle steps&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;ggplot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;metrics_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Step&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Modularity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;geom_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;geom_point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;labs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Modularity over Network Shuffling&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Shuffle Step&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Modularity&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;n&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Network Type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;theme_bw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Shuffle Modularity Plot&#34; srcset=&#34;
               /post/25-05-07-infomap/degree_shuffling_plot_hu_78b804f52fb7bc2.webp 400w,
               /post/25-05-07-infomap/degree_shuffling_plot_hu_f3f41e4314fbaae4.webp 760w,
               /post/25-05-07-infomap/degree_shuffling_plot_hu_8a9964c3843bfc6e.webp 1200w&#34;
               src=&#34;https://lsaravia.github.io/post/25-05-07-infomap/degree_shuffling_plot_hu_78b804f52fb7bc2.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;run_infomap()&lt;/code&gt; wraps the external Infomap binary and gives reliable modularity estimates.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cluster_infomap()&lt;/code&gt; (igraph) gives different results than the original app.&lt;/li&gt;
&lt;li&gt;Randomization routines like &lt;code&gt;curve_ball()&lt;/code&gt; and &lt;code&gt;shuffle_network_deg()&lt;/code&gt; help assess structural significance.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shuffle_network_deg()&lt;/code&gt; is useful for increasingly randomize the network in steps but it is slower for a complete
randomization.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curve_ball()&lt;/code&gt; randomize the network in an efficient and unbiased way&lt;/li&gt;
&lt;li&gt;Visualizing modularity distributions is key for interpreting modular structure.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;üì¶ &lt;a href=&#34;https://github.com/lsaravia/multiweb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;multiweb GitHub Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;üìò &lt;a href=&#34;https://www.mapequation.org/infomap/#Install&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Infomap Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;üìÑ Strona et al. 2014. &lt;em&gt;Nature Communications&lt;/em&gt; 5:4114. &lt;a href=&#34;https://doi.org/10.1038/ncomms5114&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://doi.org/10.1038/ncomms5114&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feel free to reach out or open an issue on GitHub if you&amp;rsquo;d like to contribute!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>More Species in Small Patches vs. Large Patches: Insights from Modeling</title>
      <link>https://lsaravia.github.io/post/25-04-28-fragmentation/</link>
      <pubDate>Mon, 28 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://lsaravia.github.io/post/25-04-28-fragmentation/</guid>
      <description>&lt;p&gt;Biodiversity around the world is declining due to the loss of natural habitats. When trying to protect what is left, conservation agencies often prioritize preserving one large habitat area over several smaller areas of the same total size. However, recent studies suggest that preserving multiple smaller areas can actually be more effective for protecting species.&lt;/p&gt;
&lt;p&gt;To better understand this, we used computer models to simulate how species communities respond to different habitat configurations. Our models analyzed three types of scenarios: species that do not compete with each other, species that can choose where to live, and species that compete for space. We also considered how far species can move (disperse), how quickly they reproduce, and how fast they go extinct.&lt;/p&gt;
&lt;p&gt;The results show that, in most cases, having several smaller habitat patches protects more species than one large patch of the same total area. The only exception is when the species cannot move between the smaller patches and the patches are too small to support healthy populations on their own.
Dispersal ability plays a key role: species that can move long distances tend to spread out evenly across the landscape, which reduces diversity, making them benefit less from having multiple small areas. On the other hand, species with lower dispersal ability tend to cluster in specific areas, increasing local diversity, so they benefit more from smaller areas, as long as they are not completely isolated.&lt;/p&gt;
&lt;p&gt;These findings provide important insights into the best strategies for conserving biodiversity. While conventional wisdom has often favored preserving one large habitat, our models suggest that multiple smaller protected areas may often be a more effective approach, as long as the patches are large enough and connected enough for species to thrive. This is an important consideration as conservation agencies make decisions about how to protect the rapidly declining natural habitats around the world.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;You can read the full article&lt;/strong&gt; &lt;a href=&#34;https://besjournals.onlinelibrary.wiley.com/doi/full/10.1111/1365-2435.14695&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;here&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Sesi√≥n tem√°tica &#34;Redes Tr√≥ficas&#34; en las XII Jornadas Nacionales de Ciencias del Mar</title>
      <link>https://lsaravia.github.io/post/25-12-01-redes-jncm/</link>
      <pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://lsaravia.github.io/post/25-12-01-redes-jncm/</guid>
      <description>&lt;p&gt;Nos encontramos ante la mayor crisis ecol√≥gica de la historia de la humanidad. La
acelerada p√©rdida de biodiversidad no solo afecta a las especies de manera individual,
sino que tambi√©n tiene repercusiones a nivel ecosist√©mico. Las especies no existen en
aislamiento, sino que forman parte de complejas redes de interacciones que
estructuran los ecosistemas.&lt;/p&gt;
&lt;p&gt;Para comprender los impactos del cambio global es
esencial entender el funcionamiento y la estabilidad de estas redes ecol√≥gicas. Las
interacciones entre especies en los ecosistemas pueden ser tr√≥ficas, mutualistas,
competitivas, amensalistas o comensalistas, y su estudio ha evolucionado desde las
primeras observaciones de naturalistas hasta la aplicaci√≥n de herramientas anal√≠ticas
avanzadas. Las redes ecol√≥gicas proporcionan un marco conceptual y metodol√≥gico
para evaluar la estabilidad y resiliencia de los ecosistemas, permitiendo abordar el
impacto del cambio global y la p√©rdida de especies. En esta sesi√≥n tem√°tica, invitamos
a presentar trabajos que estudien redes ecol√≥gicas desde distintas perspectivas: desde
el an√°lisis de interacciones hasta la modelizaci√≥n de redes complejas en ecosistemas
marinos y costeros; incluyendo contribuciones que exploren c√≥mo las redes ecol√≥gicas
responden a perturbaciones ambientales y c√≥mo su comprensi√≥n puede contribuir a la
conservaci√≥n y manejo de los ecosistemas. A trav√©s de esta sesi√≥n, esperamos generar
un espacio de discusi√≥n sobre enfoques te√≥ricos y aplicados que permitan avanzar en
la comprensi√≥n de las redes ecol√≥gicas y su papel en los ecosistemas.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What Determines Food Web Structure?</title>
      <link>https://lsaravia.github.io/post/what-determines-food-web-structure2022/</link>
      <pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://lsaravia.github.io/post/what-determines-food-web-structure2022/</guid>
      <description>&lt;p&gt;In nature species interact among each other in many ways. The most
common and studied interaction is that between a predator and its prey.
A food web can be defined as a network of interactions that describes
who eats whom in a certain ecosystem and at a certain time of the year.
In any ecosystem, in a terrestrial, freshwater or marine environment,
the so-called food web is comprised by lots of species (hundreds) and
interactions (thousands), showing a complex network of predator-prey
interactions.&lt;/p&gt;
&lt;p&gt;In a recent paper in the Journal of Animal Ecology, we studied the
assembly process of food webs, that means how the complex network of
interactions is formed and which are the principal factors that drive
such processes. To put it in simple words, our research question was the
following: what determines the structure of a food web?&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Florida Keys Mangrove Island. CC BY-SA 3.0,
https://en.wikipedia.org/w/index.php?curid=11746362&#34; srcset=&#34;
               /post/what-determines-food-web-structure2022/Red_mangrove-everglades_natl_park_hu_da98d9a7e789d1b4.webp 400w,
               /post/what-determines-food-web-structure2022/Red_mangrove-everglades_natl_park_hu_ad4b6c5b8662215.webp 760w,
               /post/what-determines-food-web-structure2022/Red_mangrove-everglades_natl_park_hu_31a17bf82386ad8f.webp 1200w&#34;
               src=&#34;https://lsaravia.github.io/post/what-determines-food-web-structure2022/Red_mangrove-everglades_natl_park_hu_da98d9a7e789d1b4.webp&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Due to previous investigations of colleagues we now know that the
structure of a food web is the result of community assembly, which is a
repeated process of species arrival, colonisation and local extinction.
This implies that there are two major components that determine the
structure of a food web: 1) the composition of species from where
individuals migrate to new habitats, referred to as the regional pool or
metaweb; and 2) a selective process that determines which species can
arrive and persist in the new habitat. We also know that the first to
colonise new habitats are species with a broad diet (i.e. great variety
of prey). Thus, predator-prey interactions are established during the
assembly process that begins the formation of a network of interactions:
the food web &amp;ldquo;in progress&amp;rdquo;. Added to this, the characteristics of the
habitat (substrate, climatic conditions) and the dispersal capability of
the species are important factors that also control the assembly process
of the food web, determining which species might be able to persist in
time.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Long Pond Lake at Adirondacks Region. By Original uploader was Mwanner
at en.wikipediaLater version(s) were uploaded by XcepticZP at
en.wikipedia. - Transferred from en.wikipedia, CC BY-SA 3.0,
https://commons.wikimedia.org/w/index.php?curid=4044745&#34; srcset=&#34;
               /post/what-determines-food-web-structure2022/Long_Pond_lake_hu_c5c9e8b72aa2e7d3.webp 400w,
               /post/what-determines-food-web-structure2022/Long_Pond_lake_hu_65ec33ce776dd55c.webp 760w,
               /post/what-determines-food-web-structure2022/Long_Pond_lake_hu_87bc619efdc8dc38.webp 1200w&#34;
               src=&#34;https://lsaravia.github.io/post/what-determines-food-web-structure2022/Long_Pond_lake_hu_c5c9e8b72aa2e7d3.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;The structure of a food web is ultimately constrained by the species and
potential interactions that exist in the regional pool, that is, the
metaweb. Such metaweb is shaped by evolutionary and biogeographical
processes that imply large spatial and temporal scales, containing many
habitats and communities. Each of the local communities can have
different food web structures, in terms of species and interactions
among them. Some theorists conceive of assembly as a non-Darwinian
selection process, whereby species and particular structures that
destabilise the food web will be lost and stabilising structures will
persist. Therefore, we should expect those stabilising structures to be
over-represented in local food webs compared to the metaweb.&lt;/p&gt;
&lt;p&gt;To test the hypothesis that the selective processes are responsible for
food web structure, we created an assembly model, where species migrate
from a regional pool and persist in a theoretical local food web given
at least one prey item available. The model considers
colonisation-extinction and secondary extinctions (i.e. if a species
arrives and none of its prey are present) events constrained by network
structure that is represented by predator-prey interactions. Thus, the
model does not include local selective processes and habitat constraints
that are thought to control the assembly process. Then we compared the
theoretical local food webs created from the assembly model with real
food webs. We hypothesised that, if local processes like stability
determine the food web structure, then we should observe a consistent
difference in the network structural characteristics between real food
webs and those assembled from the model. To test our hypothesis we
compiled 58 real food webs from a variety of regions and ecosystems: 2
marine food webs from Antarctica, 50 freshwater ones from the
Adirondacks region and 6 from an Arthropod community in six islands of
the Florida Keys.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Schematic diagram of the assembly model: species migrate from the
metaweb to a local food web carrying their potential interactions.
Predators become extinct if none of its prey are
present&#34; srcset=&#34;
               /post/what-determines-food-web-structure2022/MetaWebAssemblyModelFigure_hu_7404c140bcd4c18f.webp 400w,
               /post/what-determines-food-web-structure2022/MetaWebAssemblyModelFigure_hu_36e6b25c2e1e6c26.webp 760w,
               /post/what-determines-food-web-structure2022/MetaWebAssemblyModelFigure_hu_59d1cd3763f5669.webp 1200w&#34;
               src=&#34;https://lsaravia.github.io/post/what-determines-food-web-structure2022/MetaWebAssemblyModelFigure_hu_7404c140bcd4c18f.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Contrary to our expectations, we found that most structural
characteristics didn&amp;rsquo;t differ between the real and modeled food webs. We
particularly compared properties related to stability, such as
modularity and the frequency of three-species motifs, and habitat
filtering and dispersal limitation, such as topological roles that
characterise how many interactions a species has within their module
and/or between modules (i.e. modules are formed by a group of species
that share more interactions compared to other species). This suggests
that evolutionary and biogeographical processes that are established in
the metaweb are more important and might drive the studied structural
characteristics in a food web than local processes such as habitat
filtering and dispersal limitations. In particular, our study forces us
to re-think the way we approach the study of food web structure. The
network properties that we as ecologists commonly use to shed light on
this aspect might be a by-product of the assembly process already driven
at the metaweb spatial and temporal scales.&lt;/p&gt;
&lt;p&gt;More info:
&lt;a href=&#34;https://lsaravia.github.io/publication/saravia-2019/&#34;&gt;Check the complete publication here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Stochastic Network Interaction Model (SNIM) Tutorial</title>
      <link>https://lsaravia.github.io/post/snim-tutorial/</link>
      <pubDate>Sun, 09 Feb 2020 23:53:14 -0300</pubDate>
      <guid>https://lsaravia.github.io/post/snim-tutorial/</guid>
      <description>&lt;p&gt;This is a beautifully simple ecological network model that can simulate predator-prey and competitive multispecies dynamics. This is the &lt;strong&gt;B&lt;/strong&gt; model of the paper &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, I read it long ago and for many years I wanted to make a version of it, finally, I did it.&lt;/p&gt;
&lt;p&gt;You can find the source code here &lt;a href=&#34;https://github.com/lsaravia/snim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/lsaravia/snim&lt;/a&gt;. To install it, clone the repository using &lt;code&gt;git clone&lt;/code&gt; or download and compile it, following the instructions in the README.&lt;/p&gt;
&lt;p&gt;The model description from &lt;sup id=&#34;fnref1:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; is the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The second model again involves a set of S (possible) species plus empty sites (pseudospecies
labelled 0). This set (the species pool) $\Omega(S)$ is then a discrete set:&lt;/p&gt;
&lt;p&gt;$\Omega(S) = {0,1,2,&amp;hellip;,S}$&lt;/p&gt;
&lt;p&gt;where 0 indicates empty space, available to all species
from the pool. Three basic types of transition are allowed
to occur. Let us call $ A,B \in \Omega(S )$ two given spcies present at a given step. These possible transitions are summarized as follows.&lt;/p&gt;
&lt;p&gt;(i) Immigration: an empty site is occupied by a species randomly chosen from the set of (non-empty) species, i.e. $A \in \Omega(S )-{0}$:&lt;/p&gt;
&lt;p&gt;$0 \xrightarrow{u_i} A$&lt;/p&gt;
&lt;p&gt;This occurs with a probability of colonization (of empty sites) $\mu_i$ . Notice that this colonization depends on the particular species.&lt;/p&gt;
&lt;p&gt;(ii) Death: All occupied sites can become empty with some fixed probability $e_i$ :&lt;/p&gt;
&lt;p&gt;$A \xrightarrow{e_i} 0$&lt;/p&gt;
&lt;p&gt;(iii) Interaction: the same rule as in model A is used, but here the probability of success $P_{ij}$ is weighted by the coefficients of the interaction matrix. Here we use&lt;/p&gt;
&lt;p&gt;$P_{ij} = \pi[\Omega_{ij} - \Omega_{ji}]$&lt;/p&gt;
&lt;p&gt;where $\pi[x]=x$ when $x &amp;gt; 0$ and zero otherwise. This probability of an interaction occurring in the system between species $i$ and $j$ is a measure of the interaction strength linking interacting species.&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;using-snim-from-r&#34;&gt;Using SNIM from R&lt;/h2&gt;
&lt;p&gt;Once installed, you can easily run simulations from R.&lt;/p&gt;
&lt;p&gt;First, the model requires two input files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;species parameter file&lt;/strong&gt; (&lt;code&gt;.par&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;simulation parameter file&lt;/strong&gt; (&lt;code&gt;.cfg&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example-species-parameter-file&#34;&gt;Example: Species Parameter File&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Model parameters example 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3 10000                  # 3 species, total habitat 10000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0.1 	0.1 	0.1      # Immigration vector
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1 		1 		1        # Extinction vector
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Omega interaction matriz 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Species 0 is empty space
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Species 1 Predator eats 2 and 3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Species 2 has higher growth rate 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Species 3 outcompete species 2 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0.0 0.0 0.0 0.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0.0 0.0 3.0 2.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4.0 0.0 0.0 0.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2.0 0.0 0.5 0.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;First line:&lt;/strong&gt; Number of species and total habitat size.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Second line:&lt;/strong&gt; Immigration rates for each species.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Third line:&lt;/strong&gt; Extinction rates for each species.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Following lines:&lt;/strong&gt; Omega interaction matrix (including intrinsic growth rates and interactions).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example-simulation-parameter-file&#34;&gt;Example: Simulation Parameter File&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Simulation parameters example 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rndSeed = 0				# 0 means a random rndSeed
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nEvals  = 500           # number of time steps
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tau     = 0.01          # Integration step
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iniCond = 1000          # Initial condition of abundance of species 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        # if only one number is specified all the species will have the same initial conditions
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;running-the-model-from-r&#34;&gt;Running the Model from R&lt;/h2&gt;
&lt;p&gt;A set of R functions are included. First, set a global variable pointing to the SNIM binary. Then, run the simulation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Global path to the binary of SNIM model&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;snimBin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;~/Dropbox/cpp/CaNew/snim/dist/Release/GNU-Linux/snim&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;R/snim_functions.r&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;run_snim_plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;simul.cfg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;model3.par&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;model.out&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/snim-tutorial/model3_hu_b32a73f3fea7cea1.webp 400w,
               /post/snim-tutorial/model3_hu_c8340833e340e986.webp 760w,
               /post/snim-tutorial/model3_hu_dc90963ab3f1fcb9.webp 1200w&#34;
               src=&#34;https://lsaravia.github.io/post/snim-tutorial/model3_hu_b32a73f3fea7cea1.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;animating-the-dynamics-with-gganimate&#34;&gt;Animating the Dynamics with &lt;code&gt;gganimate&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;An animation of the species densities can be created. First, set a shorter simulation (&lt;code&gt;nEvals = 100&lt;/code&gt;), run the model again, and use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gganimate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;ggplot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Species&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Density&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colour&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Species&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nf&#34;&gt;geom_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;  &lt;span class=&#34;nf&#34;&gt;theme_bw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;scale_y_log10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;xlab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nf&#34;&gt;transition_reveal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34;
           src=&#34;https://lsaravia.github.io/post/snim-tutorial/SNIManimation3Species.gif&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Have fun!&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Sole, R. V, Alonso, D. &amp;amp; Mckane, A. (2002). Self-organized instability in complex ecosystems. Philos. Trans. R. Soc. Lond. B. Biol. Sci., 357, 667‚Äì681 &lt;a href=&#34;https://royalsocietypublishing.org/doi/10.1098/rstb.2001.0992&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://royalsocietypublishing.org/doi/10.1098/rstb.2001.0992&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref1:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Stochastic Network Interaction Model</title>
      <link>https://lsaravia.github.io/post/stochastic-network-interaction-model/</link>
      <pubDate>Mon, 31 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://lsaravia.github.io/post/stochastic-network-interaction-model/</guid>
      <description>&lt;h1 id=&#34;snim&#34;&gt;SNIM&lt;/h1&gt;
&lt;p&gt;This is a C++11 implementation of a stochastic multispecies model. The model has multiple applications to investigate the relationship between ecological interactions (competition, predation) and diversity. It involves a discrete definition of individuals belonging to a given set of species. The dynamics are essentially probabilistic at the microscopic scale, but it leads to recognizable macroscopic patterns both in space and time. The model in is actual version is spatially implicit but a spatially explicit version is planned (never did it). You can find the source code at: &lt;a href=&#34;https://github.com/lsaravia/snim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/lsaravia/snim&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A more complete definition of the model can be found in:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sole, R. V, Alonso, D. &amp;amp; Mckane, A. (2002). Self-organized instability in complex ecosystems. Philos. Trans. R. Soc. Lond. B. Biol. Sci., 357, 667‚Äì681 &lt;a href=&#34;https://royalsocietypublishing.org/doi/10.1098/rstb.2001.0992&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://royalsocietypublishing.org/doi/10.1098/rstb.2001.0992&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And check this presentation to see an application of the model &lt;a href=&#34;https://www.doi.org/10.13140/RG.2.2.17020.33929&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.doi.org/10.13140/RG.2.2.17020.33929&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
